# -*- coding: utf-8 -*-
"""Data Analysis of 1000 companies in india.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xco3ulE9E13vF6xvOBxile4WtH6MD1CJ
"""

import pandas as pd
df=pd.read_csv("/content/revenuefinal.csv")
df.dropna()
df=df.dropna(subset=['Categories'])
uni=df['Categories'].unique()
display(uni)
print("............................................................")
display("Number of Categories ="+str(len(uni)))

#removing dollar and billion symbol

df['Rank'] = df['Rank'].str.strip("#")
df['Marketcap'] = df['Marketcap'].str.strip("$")
df['Marketcap'] = df['Marketcap'].str.strip("B")
df['Share.Price'] = df['Share.Price'].str.strip("$")
df['Revenue'] = df['Revenue'].str.strip("B")
df['Revenue'] = df['Revenue'].str.strip("$")

#converting string to float
df['Marketcap']=df['Marketcap'].astype(float)
df['Revenue']=df['Revenue'].astype(float)
df['Share.Price']=df['Share.Price'].astype(float)
df['Rank']=df['Rank'].astype(float)
df['Names']=df['Names'].astype(str)

#converting billion to thousands
df['Marketcap']=df['Marketcap']*1000
df['Revenue']=df['Revenue']*1000

# companies which comes under rank100
sort_rank=df[df['Rank']<100]

display(sort_rank.head(10))

#finding top two ranked companies in each sector
for i in uni:
  row=df[df['Categories']==i]
  sort_row=row.sort_values(by=['Rank'])
  display(sort_row.head(2))
  print("##########################################################################################################")



#which company rank first in Bank Sector
og=df[df['Categories']=='🏦 Banks']
sort_og=og.sort_values(by=['Rank'])
display(sort_og.head(5))

# where we can invest



#First top 10 comapnies with lowest Share Price
sort_sp=og.sort_values(by=['Share.Price'])
filter_sp=sort_sp[["Names","Categories","Share.Price","Rank"]]
display(filter_sp.head(10))

df['No of Shares']=df['Marketcap']/df['Share.Price']
display(df.head(5))

df['Categories'].fillna("others", inplace=True)
display(df.head(5))

#finding total revenue made by each categories
rev_dict={}

for i in uni:
  row=df[df['Categories']==i]

  sum_rev=(row['Revenue'].sum())

  rev_dict[i]=sum_rev
  cat_rev = pd.DataFrame(list(rev_dict.items()), columns=['Categories', 'Revenew'])
display(cat_rev)

#average marketcap for each category

markcap_dict={}

for i in uni:
  row=df[df['Categories']==i]

  avg_mcap=str(row['Marketcap'].mean())

  markcap_dict[i]=avg_mcap
  cat_markcap = pd.DataFrame(list(markcap_dict.items()), columns=['Categories', 'Marketcap'])
display(cat_markcap)

#avg shareprice of each category

shareprice_dict={}

for i in uni:
  row=df[df['Categories']==i]

  avg_sprice=(row['Share.Price'].mean())

  shareprice_dict[i]=avg_sprice
  cat_shareprice = pd.DataFrame(list(shareprice_dict.items()), columns=['Categories', 'Shareprice_mean'])
display(cat_shareprice )

#bar plot of Categories VS Shareprice
import matplotlib.pyplot as plt

cat_shareprice.plot(kind='bar', x='Categories', y='Shareprice', legend=False)

# Adding labels and title
plt.xlabel('Categories')
plt.ylabel('Share.Price')
plt.title('Bar Plot of Categories vs Shareprice ')

# Displaying the plot
plt.show()

import matplotlib.pyplot as plt
#bar plot of Categories VS Shareprice
cat_rev.plot(kind='bar', x='Categories', y='Revenew', legend=False)

# Adding labels and title
plt.xlabel('Categories')
plt.ylabel('Revenew')
plt.title('Bar Plot of Categories vs Revenew ')

# Displaying the plot
plt.show()

#Find
